using System;
using System.Threading;
using System.Collections.Generic;
using System.Linq;

namespace lab_08_zadanie
{
    class Program
    {
        static void Main(string[] args)
        {

            Object locker = new Object();

            HashSet<int> primeNum = new HashSet<int>();

            Thread thread1 = new Thread(() =>
            {
                for (int i = 2; i < 1000; i++)
                {
                    if (isPrimeNumber(i) == true)
                    {

                        lock (locker) // remove this line and check output to see effect
                        {
                            primeNum.Add(i);
                        }

                    }
                }
            });

            Thread thread2 = new Thread(() =>
            {
                for (int i = 1000; i < 2000; i++)
                {

                    if (isPrimeNumber(i) == true)
                    {

                        lock (locker) // remove this line and check output to see effect
                        {
                            primeNum.Add(i);
                        }

                    }

                }

            });

            Thread thread3 = new Thread(() =>
            {
                for (int i = 2000; i < 3000; i++)
                {
                    if (isPrimeNumber(i) == true)
                    {

                        lock (locker) // remove this line and check output to see effect
                        {
                            primeNum.Add(i);
                        }

                    }
                }

            });

            Thread thread4 = new Thread(() =>
            {
                for (int i = 3000; i < 4000; i++)
                {
                    if (isPrimeNumber(i) == true)
                    {

                        lock (locker) // remove this line and check output to see effect
                        {
                            primeNum.Add(i);
                        }

                    }
                }

            });

            thread1.Start();
            thread2.Start();
            thread3.Start();
            thread4.Start();

            thread1.Join();
            thread2.Join();
            thread3.Join();
            thread4.Join();

            var sortedPrimeNum = primeNum.OrderBy(i => i);

            foreach (var item in sortedPrimeNum)
            {
                Console.WriteLine(item);
            }
        }

        public static bool isPrimeNumber(int number)
        {
            var limit = Math.Floor(Math.Sqrt(number));
            for (int i = 2; i <= limit; ++i)
            {
                if (number % i == 0)
                {
                    return false;
                }
            }
            return number >= 2;
        }
    }
}
